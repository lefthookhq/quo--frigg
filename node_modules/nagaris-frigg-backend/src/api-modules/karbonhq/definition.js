require('dotenv').config();
const { Api } = require('./api');
const config = require('./defaultConfig.json');

const Definition = {
    API: Api,
    getName: () => config.name,
    moduleName: config.name,
    modelName: 'KarbonHQ',
    requiredAuthMethods: {
        getToken: async (api, params) => {
            // KarbonHQ uses dual API key authentication
            const applicationId = params.applicationId || params.data?.applicationId;
            const accessKey = params.accessKey || params.data?.accessKey;

            if (!applicationId || !accessKey) {
                throw new Error('Application ID and Access Key are required');
            }

            return {
                applicationId,
                accessKey
            };
        },
        getEntityDetails: async (api, callbackParams, tokenResponse, userId) => {
            // Use application ID as the external identifier
            return {
                identifiers: {
                    externalId: tokenResponse.applicationId,
                    user: userId
                },
                details: {
                    name: 'KarbonHQ Account',
                    applicationId: tokenResponse.applicationId
                },
            };
        },
        apiPropertiesToPersist: {
            credential: ['applicationId', 'accessKey'],
            entity: [],
        },
        getCredentialDetails: async (api, userId) => {
            return {
                identifiers: {
                    externalId: api.applicationId,
                    user: userId
                },
                details: {}
            };
        },
        testAuthRequest: async (api) => {
            // Test by fetching contacts
            await api.listContacts({ limit: 1 });
            return { authenticated: true };
        },
    },
    env: {
        // No OAuth env variables needed for API key auth
    }
};

module.exports = { Definition };
