require('dotenv').config();
const { Api } = require('./api');
const { get } = require('@friggframework/core');
const config = require('./defaultConfig.json');

const Definition = {
    API: Api,
    getName: () => config.name,
    moduleName: config.name,
    modelName: 'Monday',
    requiredAuthMethods: {
        getToken: async (api, params) => {
            const code = get(params.data, 'code');
            return api.getTokenFromCode(code);
        },
        getEntityDetails: async (api, callbackParams, tokenResponse, userId) => {
            const accountDetails = await api.getAccount();
            const { id, name } = accountDetails.data.account;

            return {
                identifiers: {
                    externalId: id,
                    user: userId
                },
                details: {
                    name: name,
                },
            };
        },
        apiPropertiesToPersist: {
            credential: ['access_token', 'refresh_token'],
            entity: [],
        },
        getCredentialDetails: async (api, userId) => {
            const accountDetails = await api.getAccount();
            const { id } = accountDetails.data.account;

            return {
                identifiers: {
                    externalId: id,
                    user: userId
                },
                details: {}
            };
        },
        testAuthRequest: async (api) => api.getAccount(),
    },
    env: {
        client_id: process.env.MONDAY_CLIENT_ID,
        client_secret: process.env.MONDAY_CLIENT_SECRET,
        scope: process.env.MONDAY_SCOPES || 'boards:read boards:write',
        redirect_uri: `${process.env.REDIRECT_URI}/monday`,
    }
};

module.exports = { Definition };
