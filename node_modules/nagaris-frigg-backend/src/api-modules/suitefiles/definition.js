require('dotenv').config();
const { Api } = require('./api');
const { get } = require('@friggframework/core');
const config = require('./defaultConfig.json');

const Definition = {
    API: Api,
    getName: () => config.name,
    moduleName: config.name,
    modelName: 'SuiteFiles',
    requiredAuthMethods: {
        getToken: async (api, params) => {
            // SuiteFiles returns token directly in redirect URL
            const suitetoken = get(params.data, 'suitetoken');

            if (!suitetoken) {
                throw new Error('SuiteFiles token not found in redirect');
            }

            return {
                access_token: suitetoken,
            };
        },
        getEntityDetails: async (api, callbackParams, tokenResponse, userId) => {
            const userDetails = await api.getUserDetails();
            return {
                identifiers: {
                    externalId: userDetails.id || userDetails.userId,
                    user: userId
                },
                details: {
                    name: userDetails.name || userDetails.email,
                    email: userDetails.email,
                },
            };
        },
        apiPropertiesToPersist: {
            credential: ['access_token'],
            entity: [],
        },
        getCredentialDetails: async (api, userId) => {
            const userDetails = await api.getUserDetails();
            return {
                identifiers: {
                    externalId: userDetails.id || userDetails.userId,
                    user: userId
                },
                details: {}
            };
        },
        testAuthRequest: async (api) => api.getUserDetails(),
    },
    env: {
        app_key: process.env.SUITEFILES_APP_KEY,
        redirect_uri: `${process.env.REDIRECT_URI}/suitefiles`,
    }
};

module.exports = { Definition };
