require('dotenv').config();
const { Api } = require('./api');
const { get } = require('@friggframework/core');
const config = require('./defaultConfig.json');

const Definition = {
    API: Api,
    getName: () => config.name,
    moduleName: config.name,
    modelName: 'FYIDocs',
    requiredAuthMethods: {
        getToken: async (api, params) => {
            // FYI uses public integration with app key + user secret
            const userSecret = get(params.data, 'userSecret');
            const appKey = process.env.FYI_APP_KEY;

            if (!userSecret) {
                throw new Error('FYI user secret is required');
            }

            if (!appKey) {
                throw new Error('FYI app key not configured');
            }

            return {
                userSecret: userSecret,
                appKey: appKey,
            };
        },
        getEntityDetails: async (api, callbackParams, tokenResponse, userId) => {
            const userDetails = await api.getUserDetails();
            return {
                identifiers: {
                    externalId: userDetails.id || userDetails.userId,
                    user: userId
                },
                details: {
                    name: userDetails.name || userDetails.email,
                    email: userDetails.email,
                    organization: userDetails.organization,
                },
            };
        },
        apiPropertiesToPersist: {
            credential: ['userSecret', 'appKey'],
            entity: [],
        },
        getCredentialDetails: async (api, userId) => {
            const userDetails = await api.getUserDetails();
            return {
                identifiers: {
                    externalId: userDetails.id || userDetails.userId,
                    user: userId
                },
                details: {
                    organization: userDetails.organization,
                }
            };
        },
        testAuthRequest: async (api) => api.getUserDetails(),
    },
    getConfigOptions: async (api, params) => {
        // Frontend configuration options for FYI Docs integration
        return {
            fields: [
                {
                    name: 'userSecret',
                    label: 'FYI User Secret',
                    type: 'password',
                    required: true,
                    description: 'Your FYI user secret key for API access',
                    placeholder: 'Enter your FYI user secret',
                    helpText: 'You can find your user secret in your FYI account settings under API access.',
                }
            ],
            instructions: {
                title: 'How to get your FYI User Secret',
                steps: [
                    '1. Log in to your FYI account',
                    '2. Go to Settings > API Access',
                    '3. Generate or copy your User Secret',
                    '4. Paste it in the field above'
                ]
            }
        };
    },
    env: {
        app_key: process.env.FYI_APP_KEY,
    }
};

module.exports = { Definition };
