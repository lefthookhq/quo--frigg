const CreditorWatchIntegration = require('./src/integrations/CreditorWatchIntegration');
const AsicIntegration = require('./src/integrations/AsicIntegration');
const SuiteFilesIntegration = require('./src/integrations/SuiteFilesIntegration');
const FYIDocsIntegration = require('./src/integrations/FYIDocsIntegration');
const MondayIntegration = require('./src/integrations/MondayIntegration');
const KarbonHqIntegration = require('./src/integrations/KarbonHqIntegration');
const Cas360Integration = require('./src/integrations/Cas360Integration');
const Simplefund360Integration = require('./src/integrations/Simplefund360Integration');
const TwilioIntegration = require('./src/integrations/TwilioIntegration');
const HubspotIntegration = require('./src/integrations/HubspotIntegration');

const appDefinition = {
    label: 'Nagaris Integrations',
    name: 'nagaris-integrations',
    integrations: [CreditorWatchIntegration, AsicIntegration, SuiteFilesIntegration, FYIDocsIntegration, MondayIntegration, KarbonHqIntegration, Cas360Integration, Simplefund360Integration, TwilioIntegration, HubspotIntegration],
    user: {
        usePassword: true,
    },
    encryption: {
        fieldLevelEncryptionMethod: 'kms',
        createResourceIfNoneFound: true,
    },
    vpc: {
        enable: true,
        management: 'discover', // 'create-new' | 'discover' | 'use-existing'
        vpcId: null, // Optional: specific VPC ID to use when management is 'use-existing'
        subnets: {
            management: 'discover', // 'create' | 'discover' | 'use-existing'
            ids: [], // Optional: specific subnet IDs when management is 'use-existing'
        },
        natGateway: {
            management: 'createAndManage', // 'createAndManage' | 'discover' | 'useExisting'
            id: null, // Optional: specific NAT Gateway ID when management is 'useExisting'
        },
        selfHeal: true, // Enable automatic fixing of misconfigurations
    },
    database: {
        mongoDB: {
            enable: false,
        },
        documentDB: {
            enable: true,
            tlsCAFile: './security/global-bundle.pem',
        },
    },
    ssm: {
        enable: false,
    },
    environment: {
        // Core Configuration
        BASE_URL: true,
        DATABASE_URL: true,
        REDIRECT_PATH: true,
        // AWS Configuration
        AWS_REGION: true,
        S3_BUCKET_NAME: true,
    },
};

module.exports = {
    Definition: appDefinition,
};
