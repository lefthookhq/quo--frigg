version: '3.7'
services:
    mongodb_container:
        image: mongo:latest
        command: ["--replSet", "rs0", "--bind_ip_all"]
        ports:
            - ${MONGO_PORT:-27017}:27017
        volumes:
            - mongodb_data_container:/data/db
        healthcheck:
            test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 40s

    mongodb_init:
        image: mongo:latest
        depends_on:
            mongodb_container:
                condition: service_healthy
        volumes:
            - ./mongo-init.sh:/mongo-init.sh:ro
        entrypoint: ["bash", "/mongo-init.sh"]
        network_mode: "service:mongodb_container"
        restart: "no"
    postgres_container:
        image: postgres:16-alpine
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: frigg
        ports:
            - ${POSTGRES_PORT:-5432}:5432
        volumes:
            - postgres_data_container:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
    localstack:
        image: localstack/localstack:3.4.0
        environment:
            - SERVICES=sqs,sns
            - AWS_DEFAULT_REGION=us-east-1
            - EDGE_PORT=4566
            - SQS_ENDPOINT_STRATEGY=off
        ports:
            - '4566-4597:4566-4597'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
volumes:
    mongodb_data_container:
    postgres_data_container:
